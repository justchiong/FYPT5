/**
 * @name Classify files
 * @description This query produces a list of all files in a snapshot that are classified as
 *              generated code, test code or vendored-in library code.
 * @kind file-classifier
 * @id go/file-classifier
 */

import go

string generatorCommentRegex() {
  result = "Generated By\\b.*\\bDo not edit" or
  result = "This (file|class|interface|art[ei]fact) (was|is|(has been)) (?:auto[ -]?)?gener(e?)ated" or
  result = "Any modifications to this file will be lost" or
  result =
    "This (file|class|interface|art[ei]fact) (was|is) (?:mechanically|automatically) generated" or
  result = "The following code was (?:auto[ -]?)?generated (?:by|from)" or
  result = "Autogenerated by Thrift" or
  result = "(Code g|G)enerated from .* by ANTLR"
}

predicate classify(File f, string category) {
  // tests
  f instanceof TestFile and
  category = "test"
  or
  // vendored code
  f.getRelativePath().regexpMatch(".*/vendor/.*") and
  category = "library"
  or
  // generated code
  exists(Comment c | c.getFile() = f |
    c.getText().regexpMatch("(?i).*\\b(" + concat(generatorCommentRegex(), "|") + ")\\b.*")
    or
    // regular expression recommended for Go code generators
    // (https://golang.org/pkg/cmd/go/internal/generate/)
    c.getText().regexpMatch("^\\s*Code generated .* DO NOT EDIT\\.\\s*$")
  ) and
  category = "generated"
}

from File f, string category
where classify(f, category)
select f, category
